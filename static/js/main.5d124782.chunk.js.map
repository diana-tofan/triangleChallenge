{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","side1","side2","side3","triangleType","side1Err","side2Err","side3Err","triangleErr","_this2","onChange","ev","side","setState","defineProperty","target","value","validateLengths","sides","filter","i","nr","key","concat","message","isNaN","isValid","length","react_default","a","createElement","data-ts","className","classNames","ts-error","type","onClick","_this2$state","parseFloat","isTriangle","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5d124782.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      side1: '',\n      side2: '',\n      side3: '',\n      triangleType: '',\n      side1Err: '',\n      side2Err: '',\n      side3Err: '',\n      triangleErr: ''\n    }\n  }\n\n  render() {\n    const onChange = (ev, side) =>\n      this.setState({\n        [side]: ev.target.value\n      });\n\n    const isTriangle = (side1, side2, side3) => {\n      if ((side1 + side2 > side3) && (side1 + side3 > side2) && (side2 + side3 > side1)) {\n        this.setState({\n          triangleErr: ''\n        });\n        return true;\n      } else {\n        this.setState({\n          triangleErr: 'Sum of two side lengths should always be greater than third side'\n        });\n        return false;\n      }\n    };\n\n    const validateLengths = sides => {\n      const isValid = (side, nr) => {\n        const key = `side${nr}Err`;\n        let message = '';\n        if (isNaN(side)) {\n          message = 'Input field is empty';\n        } else if (side <= 0) {\n          message = 'A positive number is required';\n        }\n        this.setState({\n          [key]: message\n        });\n        return message === '';\n      };\n      return sides.filter((side, i) => isValid(side, i + 1)).length === 3;\n    };\n\n    const getTriangleType = () => {\n      let triangleType = '';\n      let { side1, side2, side3 } = this.state;\n      side1 = parseFloat(side1);\n      side2 = parseFloat(side2);\n      side3 = parseFloat(side3);\n      if (validateLengths([side1, side2, side3]) && isTriangle(side1, side2, side3)) {\n        if (side1 === side2 && side2 === side3 && side1 === side3) {\n          triangleType = 'equilateral';\n        } else if (side1 === side2 || side2 === side3 || side1 === side3) {\n          triangleType = 'isosceles';\n        } else {\n          triangleType = 'scalene';\n        }\n      }\n      this.setState({\n        triangleType\n      });\n    };\n\n    return (\n      <div>\n        <div data-ts=\"Board\" className=\"board\">\n          <div data-ts=\"Panel\">\n          <form data-ts=\"Form\">\n            <fieldset className=\"ts-fieldset\">\n              <label className={classNames({'ts-error': this.state.side1Err || this.state.triangleErr})}>\n                <span>Side 1</span>\n                <input\n                  type=\"number\"\n                  onChange={ev => onChange(ev, 'side1')}\n                />\n              </label>\n              {\n                !!this.state.side1Err &&\n                <dl className=\"ts-errors\">\n                  <dt>Invalid value</dt>\n                  <dd>{this.state.side1Err}</dd>\n                </dl>\n              }\n            </fieldset>\n            <fieldset className=\"ts-fieldset\">\n              <label className={classNames({'ts-error': this.state.side2Err || this.state.triangleErr})}>\n                <span>Side 2</span>\n                <input\n                  type=\"number\"\n                  onChange={ev => onChange(ev, 'side2')}\n                />\n              </label>\n              {\n                !!this.state.side2Err &&\n                <dl className=\"ts-errors\">\n                  <dt>Invalid value</dt>\n                  <dd>{this.state.side2Err}</dd>\n                </dl>\n              }\n            </fieldset>\n            <fieldset className=\"ts-fieldset\">\n              <label className={classNames({'ts-error': this.state.side3Err || this.state.triangleErr})}>\n                <span>Side 3</span>\n                <input\n                  type=\"number\"\n                  onChange={ev => onChange(ev, 'side3')}\n                />\n              </label>\n              {\n                !!this.state.side3Err &&\n                <dl className=\"ts-errors\">\n                  <dt>Invalid value</dt>\n                  <dd>{this.state.side3Err}</dd>\n                </dl>\n              }\n            </fieldset>\n            <div className='button-wrapper'>\n              <button\n                data-ts=\"Button\"\n                className=\"ts-primary\"\n                onClick={getTriangleType}\n              >\n                <span>Get triangle type</span>\n              </button>\n            </div>\n          </form>\n          {\n            !!this.state.triangleType &&\n            <div className='triangle-type'>\n              Triangle is <b>{this.state.triangleType}</b>\n            </div>\n          }\n            {\n              !!this.state.triangleErr &&\n              <dl className='ts-errors triangle-type triangle-error'>\n                <dt><b>Invalid triangle</b></dt>\n                <dd>{this.state.triangleErr}</dd>\n              </dl>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}